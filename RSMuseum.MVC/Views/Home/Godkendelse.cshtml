<head>
    <script src="https://unpkg.com/vue"></script>
</head>
<body>
    <div class="container">
        <h2>Ubehandlede registreringer</h2>
        @*Søgefelt*@
        <div id="app">
            <div id="custom-search-input">
                <div class="input-group col-md-3">
                    <input type="text" v-model="keyword" class="form-control input-lg" placeholder="Søg" />
                    <span class="input-group-btn">
                        <button class="btn btn-info btn-lg" type="button">
                            <i class="glyphicon glyphicon-search"></i>
                        </button>
                    </span>
                </div>
            </div>
            @*Tabel*@
            <table class="table">
                <thead>
                <tr>
                    <th>Navn</th>
                    <th>Dato</th>
                    <th>Timer</th>
                    <th>Laug</th>
                </tr>
                </thead>
                <transition-group name="list" tag="tbody">
                    <tbody name="table-row">
                        <tr v-for="entry in filteredList" :key="entry.RegistrationId">
                            <td>{{entry.Volunteer.FirstName}} {{entry.Volunteer.LastName}}</td>
                            <td>{{entry.Date}}</td>
                            <td>{{entry.Hours}}</td>
                            <td>{{entry.Guild.GuildName}}</td>
                            <td>
                                <p data-placement="top" data-toggle="tooltip" title="Godkend">
                                    <button v-on:click="approveRegistration(entry)" class="btn btn-success btn-xs" data-title="Godkend" data-toggle="modal" data-target="#edit"><span class="glyphicon glyphicon-ok"></span></button>
                                </p>
                            </td>
                            <td>
                                <p data-placement="top" data-toggle="tooltip" title="Afvis">
                                    <button v-on:click="rejectRegistration(entry)" class="btn btn-danger btn-xs" data-title="Afvis" data-toggle="modal" data-target="#delete"><span class="glyphicon glyphicon-remove"></span></button>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </transition-group>

</table>
        </div>
    </div>

    <script>
        class Registration {
            constructor(RegistrationId, Hours, Date, Approved, Processed, Guild, Volunteer) {
                this.RegistrationId = RegistrationId;
                this.Hours = Hours;
                this.Date = Date;
                this.Approved = Approved;
                this.Processed = Processed;
                this.Guild = Guild;
                this.Volunteer = Volunteer;
            }
        }
        class Guild {
            constructor(GuildId, GuildName) {
                    this.GuildId = GuildId;
                    this.GuildName = GuildName;
            }
         }
        class Volunteer {
            constructor(FirstName, LastName, MembershipNumber) {
                    this.FirstName = FirstName;
                    this.MembershipNumber = MembershipNumber;
                    this.LastName = LastName;
            }
        }
      var vue =  new Vue({
            el: '#app',
            data: {
                keyword: '',
                registrationList:[]
            },
            methods: {
                getRegistrations() {
                    $.get('/api/GetRegistrations/true', (data) => {
                        for (index in data) {                       
                            this.registrationList.push(new Registration(
                                data[index].RegistrationId,
                                data[index].Hours,
                                new Date(data[index].Date).toDateString(),
                                data[index].Approved,
                                data[index].Processed,
                                data[index].Guild,
                                data[index].Volunteer));
                        }
                    })
                },
               
                approveRegistration: function (id) {    
                    $.ajax({
                        type: 'GET',
                        url: '/api/HandleRegistrations/' + id.RegistrationId + '/true/',
                        success: function (data) {
                            vue.registrationList = vue.registrationList.filter(function (item) {
                                return id.RegistrationId != item.RegistrationId;
                            });
                        },
                        error: function (data) {
                            alert("Der var sku en fejl ven");
                        },
                    });
                },
                rejectRegistration: function (id) {
                    $.ajax({
                        type: 'GET',
                        url: '/api/HandleRegistrations/' + id.RegistrationId + '/false/',
                        success: function (data) {
                            vue.registrationList = vue.registrationList.filter(function (item) {
                                return id.RegistrationId != item.RegistrationId;
                            });
                        },
                        error: function (data) {
                            alert("Error");
                        },
                    });
                },
            },
            computed: {
                filteredList() {
                    return this.registrationList.filter((Registration) => {
                        return Registration.Volunteer.FirstName.toLowerCase().includes(this.keyword.toLowerCase());
                    })
                }
            },
        })
      vue.getRegistrations();
    </script>
</body>



